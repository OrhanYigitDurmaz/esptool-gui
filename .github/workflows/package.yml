name: Build Python App with Nuitka

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']
        include:
          - os: ubuntu-latest
            platform_name: linux
          - os: windows-latest
            platform_name: windows
          - os: macos-latest
            platform_name: macos

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Generate include paths for esptool (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        $esptoolPath = python -c "import esptool; import os; print(os.path.dirname(esptool.__file__))"
        $stubPath1 = Join-Path $esptoolPath "targets\stub_flasher\1"
        $stubPath2 = Join-Path $esptoolPath "targets\stub_flasher\2"
        echo "ESPTOOL_STUB1=$stubPath1" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "ESPTOOL_STUB2=$stubPath2" | Out-File -FilePath $env:GITHUB_ENV -Append

    

    - name: Generate include paths for esptool (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        $esptoolPath = python -c "import esptool; import os; print(os.path.dirname(esptool.__file__))"
        # Convert backslashes to forward slashes
        $stubPath1 = (Join-Path $esptoolPath "targets\stub_flasher\1") -replace '\\', '/'
        $stubPath2 = (Join-Path $esptoolPath "targets\stub_flasher\2") -replace '\\', '/'
        echo "ESPTOOL_STUB1=$stubPath1" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "ESPTOOL_STUB2=$stubPath2" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Build with Nuitka Action
      uses: Nuitka/Nuitka-Action@main
      with:
        nuitka-version: main
        script-name: src/mainw.py
        mode: onefile
        enable-plugins: pyside6
        include-data-dir: |
          ${{ env.ESPTOOL_STUB1 }}=esptool/targets/stub_flasher/1
          ${{ env.ESPTOOL_STUB2 }}=esptool/targets/stub_flasher/2



    - name: Rename built executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        Move-Item -Path "build/mainw.exe" -Destination "release/mainw-${{ matrix.platform_name }}.exe"
      shell: pwsh

    - name: Rename built executable (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p release
        mv build/mainw release/mainw-${{ matrix.platform_name }}
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: mainw-${{ matrix.platform_name }}
        path: release/mainw-${{ matrix.platform_name }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        retention-days: 7

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/mainw-linux/mainw-linux
            artifacts/mainw-windows/mainw-windows.exe
            artifacts/mainw-macos/mainw-macos